MyDispatcherExample{
	defaultDispatcher {
	  	 type = Dispatcher
	  	 executor = "fork-join-executor"
	  	 fork-join-executor {
       		parallelism-min = 2
    	    parallelism-factor = 2.0
		    parallelism-max = 6
	  	  }
	}

	defaultDispatcher1 {
	  	 type = Dispatcher
	  	 executor = "thread-pool-executor"
	  	 thread-pool-executor {
	       		core-pool-size-min = 1
	    	    core-pool-size-factor = 2.0
			    core-pool-size-max = 6
	  	  }
    }
    pinnedDispatcher {
	  	 type = PinnedDispatcher
	  	 executor = "thread-pool-executor"
	  	 thread-pool-executor {
	       		core-pool-size-min = 2
	    	    core-pool-size-factor = 2.0
			    core-pool-size-max = 10
	  	  }
	  	  throughput = 5
  }
   balancingDispatcher {
	  	 type = BalancingDispatcher
	  	 executor = "thread-pool-executor"
	  	 thread-pool-executor {
	       		core-pool-size-min = 1
	    	    core-pool-size-factor = 2.0
			    core-pool-size-max = 2
	  	  }
	  	  throughput = 5
   }
   balancingDispatcher1 {
	  	 type = BalancingDispatcher
	  	 executor = "fork-join-executor"
	  	 fork-join-executor {
       		parallelism-min = 2
    	    parallelism-factor = 2.0
		    parallelism-max = 6
	  	  }
	  	  throughput = 5
   }
   my-dispatcher {
     # Dispatcher is the name of the event-based dispatcher
     type = Dispatcher
     # What kind of ExecutionService to use
     executor = "fork-join-executor"
     # Configuration for the fork join pool
     fork-join-executor {
       # Min number of threads to cap factor-based parallelism number to
       parallelism-min = 2
       # Parallelism (threads) ... ceil(available processors * factor)
       parallelism-factor = 2.0
       # Max number of threads to cap factor-based parallelism number to
       parallelism-max = 10
     }
     # Throughput defines the maximum number of messages to be
     # processed per actor before the thread jumps to the next actor.
     # Set to 1 for as fair as possible.
     throughput = 100
   }
   CallingThreadDispatcher {
  	      type = akka.testkit.CallingThreadDispatcherConfigurator
    }
}